name: Auto Label Issues

on:
  workflow_dispatch:
    inputs:
      number:
        description: 'Type a issue number to label it'
        required: true
  issues:
    types: [opened, edited, reopened]

permissions:
  issues: write

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.2
      - name: Remove invited labels
        if: github.event.action != 'opened'
        uses: actions/github-script@v6.4.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

          script: |
            if ("${{ github.event_name }}" == "workflow_dispatch"){
             var number = Number("${{ github.event.inputs.number }}")
            } else {
              var number = context.payload.issue.number
            }
            // remove All of the labels
            github.rest.issues.removeAllLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: number,
            });
      - name: Add new labels (Automated)
        if: github.event_name != 'workflow_dispatch'
        uses: CoolPlayLin/Tagger@0.0.1.1
        with:
          path: ./.github/tagger.json
      - name: Add new labels (Manually)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/github-script@v6.4.1
        with:
          script: |
            function Labeler(issue) {
              const labelsToAdd = []
              const labelConditions = [
              {label: 'bug', keywords: ['Bug', 'bug', 'error', 'Error']},
              {label: 'vulnerability', keywords: ['vulnerability', 'Vulnerability', 'leak', 'Leak']},
              {label: 'enhancement', keywords: ['suggestion', 'enhancement', 'feature request', 'Feature request', 'Feature Request']},
              {label: 'documentation', keywords: ['docs', 'documentation', 'Wiki', 'wiki']},
              {label: 'help wanted', keywords: ['help wanted']},
              {label: 'question', keywords: ['question', 'Question', 'Why', 'why', 'How', 'how']},
              {label: 'authentication', keywords: ['auth', 'Auth', 'token', 'Token', 'TOKEN', 'config', 'Config', 'CONFIG', 'Unauthorized', 'unauthorized', '401', '403', '502', '503', 'forbidden', 'Forbidden', 'Access', 'access', 'block', 'Block']},
              {label: 'network', keywords: ['bing.com', 'ssl', 'SSL', 'HTTPS', 'Connection', 'connection', 'proxy', 'Proxy', 'PROXY', 'VPN']},
              {label: 'CLI', keywords: ['command program', 'Command Program', 'CLI', 'keybindings', 'Keybindings']},
              ]
              // Add tags based on conditions
              for (const {label, keywords} of labelConditions) {
                  for (const keyword of keywords) {
                      if (issue.title.includes(keyword)) {
                          labelsToAdd.push(label)
                          break
                      }
                  }
              }

              if (labelsToAdd.length == 0) {
                  labelsToAdd.push('triage-needed')
              }

              console.log("All of tags:", labelsToAdd)

              // Add tags
              github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              labels: labelsToAdd
              })
            }

            github.rest.issues.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: Number(${{ github.event.inputs.number }}),
            }).then(res => {
                Labeler(res.data)
            }).catch(error => {
                console.error(error);
            });
  assignees:
    runs-on: ubuntu-latest
    if: github.event.sender.login != github.repository_owner && github.event.action == 'opened'
    steps:
      - name: Add assignees
        uses: actions/github-script@v6.4.1
        with:
          script: |
            const assignees = ['acheong08'];
            const assignee = assignees[Math.floor(Math.random() * assignees.length)];
            console.log(`The question will assign to ${assignee}`)

            // Add assignees
            github.rest.issues.addAssignees({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                assignees: [assignee]
            })

            // Add comment
            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `*Automated*:\n ðŸ‘‹ Thanks for reporting this issue. @${assignee} will review it shortly. In the meantime, please check to see if there are any similar issues already closed.`
            })
          github-token: ${{ secrets.GITHUB_TOKEN }}
