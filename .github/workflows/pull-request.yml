name: Auto Label Issues

on: 
  pull_request_target:
    types: [opened, reopened, edited]
  pull_request_review:
    types: [submitted]

permissions:
  pull-requests: write
  issues: write

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - name: Remove invited labels
        if: github.event.action != 'opened' && github.event_name != 'pull_request_review'
        uses: actions/github-script@v6.4.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request
            // remove All of the labels
            github.rest.issues.removeAllLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
            });
      - name: Add new labels (Normal)
        if: github.event_name != 'pull_request_review'
        uses: actions/github-script@v6.4.1
        with:
          script: |
            const pr = context.payload.pull_request

            const labelsToAdd = []
            const labelConditions = [
              {label: 'bugfix', keywords: ['Bug', 'bug', 'error', 'Error', 'fix', 'Fix', 'repair', 'Repair']},
              {label: 'vulnerability', keywords: ['vulnerability', 'Vulnerability', 'leak', 'Leak']},
              {label: 'enhancement', keywords: ['enhancement', 'Enhancement', 'Add', 'add', 'improve', 'Improve']},
              {label: 'documentation', keywords: ['docs', 'documentation', 'Wiki', 'wiki']},
              {label: 'authentication', keywords: ['auth', 'Auth', 'token', 'Token', 'TOKEN', 'config', 'Config', 'CONFIG', 'Unauthorized', 'unauthorized', '401', '403', '502', '503', 'forbidden', 'Forbidden', 'Access', 'access', 'block', 'Block']},
              {label: 'network', keywords: ['bing.com', 'ssl', 'SSL', 'HTTPS', 'Connection', 'connection', 'proxy', 'Proxy', 'PROXY', 'VPN']},
              {label: 'CLI', keywords: ['command program', 'Command Program', 'CLI', 'keybindings', 'Keybindings']},
              {label: 'API', keywords: ['api', 'API']}
            ]
            // Add tags based on conditions
            for (const {label, keywords} of labelConditions) {
                for (const keyword of keywords) {
                    if (pr.title.includes(keyword)) {
                        labelsToAdd.push(label)
                        break
                    }
                }
            }

            if (labelsToAdd.length == 0) {
                labelsToAdd.push('triage-needed')
            }

            console.log("All of tags:", labelsToAdd)

            // Add tags
            github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              labels: labelsToAdd
            })
          github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Add new labels (Review)
        if: github.event_name == 'pull_request_review' && (github.event.review.state == 'approved' || github.event.review.state == 'changes_requested')
        uses: actions/github-script@v6.4.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
              const review = context.payload.review
              const pr = context.payload.pull_request
              const tags = ['Admin-Approved', 'Change-Needed']
              const Reviewers = ['${{ github.repository_owner }}', 'coolplaylinbot']
              function Labeler(state) {
                  let labels = pr.labels.map(function (obj) {
                      return obj.name
                  })
                  switch (state) {
                      case 'approved':
                          if (labels.includes(tags[1])) {
                              github.rest.issues.removeLabel({
                                  owner: context.repo.owner,
                                  repo: context.repo.repo,
                                  issue_number: pr.number,
                                  name: [tags[1]],
                              });
                          }
                          github.rest.issues.addLabels({
                              owner: context.repo.owner,
                              repo: context.repo.repo,
                              issue_number: pr.number,
                              labels: [tags[0]]
                          })
                          break
                      case 'changes-requested':
                          if (labels.includes(tags[0])) {
                              github.rest.issues.removeLabel({
                                  owner: context.repo.owner,
                                  repo: context.repo.repo,
                                  issue_number: pr.number,
                                  name: [tags[0]],
                              });
                          }
                          github.rest.issues.addLabels({
                              owner: context.repo.owner,
                              repo: context.repo.repo,
                              issue_number: pr.number,
                              labels: [tags[1]]
                          })
                          break
                      default:
                          let error = TypeError('This tate type cannot be handled')
                          throw error
                  }
              }
              if (Reviewers.includes(review.user.login)) {
                  console.log(review.state)
                  Labeler(review.state)
              } else {
                  console.log(`${review.user} does not have permission to approve this pr and will not run`)
                }
        
  assignees:
    runs-on: ubuntu-latest
    if: github.event.sender.login != github.repository_owner && github.event.action == 'opened' && github.event_name != 'pull_request_review'
    steps:
      - name: Add assignees
        uses: actions/github-script@v6.4.1
        with:
          script: |
            const pr = context.payload.pull_request;

            const assignees = ['${{ github.repository_owner }}'];
            const assignee = assignees[Math.floor(Math.random() * assignees.length)];
            console.log(`The question will assign to ${assignee}`)

            // Add assignees
            github.rest.issues.addAssignees({
                issue_number: pr.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                assignees: [assignee]
            })

            // Add comment
            github.rest.issues.createComment({
                issue_number: pr.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `*Automated*:\n ðŸ‘‹ Thanks for reporting this issue. @${assignee} will review it shortly. In the meantime, please check to see if there are any similar issues already closed.`
            })
          github-token: ${{ secrets.GITHUB_TOKEN }}
